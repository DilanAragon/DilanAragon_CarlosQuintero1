<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>